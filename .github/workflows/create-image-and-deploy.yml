name: Create Image and Deploy
'on':
  push:
    tags:
    - '*'
jobs:
  create-image:
    runs-on: ubuntu-latest
    if: github.actor == 'Pedro-UwU'
    outputs:
      app-version: ${{ steps.get-version.outputs.VERSION }}
      branch-name: ${{ steps.branch-name.outputs.BRANCH_NAME }}
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
    - name: JSON to variables
      uses: rgarcia-phi/json-to-variables@v1.1.0
      with:
        filename: .github/workflows/config.json
        prefix: CONFIG
    - name: Get Version
      id: get-version
      run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
    - name: Get Branch Name
      id: branch-name
      run: echo ::set-output name=BRANCH_NAME::$(echo ${GITHUB_REF#refs/heads/})
    - name: Login Docker
      run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login ${{ env.CONFIG_REGISTRY_URL }} -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
    - name: Create Docker Image
      run: |-
        cd ${{ env.CONFIG_DOCKERFILE_LOCATION }}
        docker build -t ${{ env.CONFIG_IMAGE_NAME }}:${{ steps.get-version.outputs.VERSION }} .
        echo 'Created Image with name:tag = ${{ env.CONFIG_IMAGE_NAME }}:${{ steps.get-version.outputs.VERSION }}'
    - name: Get Image ID
      id: image-id
      run: echo ::set-output name=IMAGE_ID::$(docker images -q ${{ env.CONFIG_IMAGE_NAME }}:${{ steps.get-version.outputs.VERSION }})
    - name: Push Image to the registry
      run: |-
        docker tag ${{ steps.image-id.outputs.IMAGE_ID }} ${{ env.CONFIG_REGISTRY_URL }}/${{ env.CONFIG_IMAGE_NAME }}:${{ steps.get-version.outputs.VERSION }}
        docker push ${{ env.CONFIG_REGISTRY_URL }}/${{ env.CONFIG_IMAGE_NAME }}:${{ steps.get-version.outputs.VERSION }}
  change-infra-file:
    runs-on: ubuntu-latest
    needs:
    - create-image
    steps:
    - name: Chekout Repo
      uses: actions/checkout@v2
    - name: JSON to variables
      uses: rgarcia-phi/json-to-variables@v1.1.0
      with:
        filename: .github/workflows/config.json
        prefix: CONFIG
    - name: Install yq
      uses: mikefarah/yq@v4.15.1
    - name: Update Infra File
      run: |-
        cd ${{ env.CONFIG_INFRA_DIRECTORY }}
        yq e -i '.spec.template.spec.containers[0].image="${{ env.CONFIG_REGISTRY_URL }}/${{ env.CONFIG_IMAGE_NAME }}:${{ needs.create-image.outputs.app-version }}"' ${{ env.CONFIG_DEPLOYMENT_FILE }}
        cat ${{ env.CONFIG_DEPLOYMENT_FILE }}
    - name: Commit Changes
      uses: cpina/github-action-push-to-another-repository@main
      env:
        API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
      with:
        source-directory: ${{ env.CONFIG_INFRA_DIRECTORY }}
        destination-github-username: extrimian
        destination-repository-name: ${{ env.CONFIG_IMAGE_NAME }}
        user-email: accountservice@extrimian.com
        target-branch: Dev
        target-directory: ${{ env.CONFIG_INFRA_DIRECTORY }}
        commit-message: Automatic Commit made by Github Actions
    - name: Backup envs.json
      run: |-
        mkdir /home/runner/temp
        cp -R .github/workflows/envs.json /home/runner/temp
    - name: Checkout Infra Repo
      uses: actions/checkout@v2
      with:
        repository: extrimian/${{ env.CONFIG_INFRA_REPO_NAME }}
        token: ${{ secrets.API_TOKEN_GITHUB }}
        ref: refs/heads/master
    - name: Create Version File
      run: |-
        mkdir -p ${{ env.CONFIG_IMAGE_NAME }}/tags
        mv /home/runner/temp/envs.json ${{ env.CONFIG_IMAGE_NAME }}/tags/${{ needs.create-image.outputs.app-version }}.json
        ls -lah
    - name: Commit Changes to Infra Repo
      uses: cpina/github-action-push-to-another-repository@main
      env:
        API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
      with:
        source-directory: ${{ env.CONFIG_IMAGE_NAME }}/tags
        destination-github-username: extrimian
        destination-repository-name: ${{ env.CONFIG_INFRA_REPO_NAME }}
        user-email: accountservice@extrimian.com
        target-branch: master
        target-directory: ${{ env.CONFIG_IMAGE_NAME }}/tags
        commit-message: 'Project ${{ env.CONFIG_IMAGE_NAME }}: Dev deployment of tag ${{ needs.create-image.outputs.app-version }}'
